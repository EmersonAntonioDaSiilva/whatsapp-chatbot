{"version":3,"sources":["ImagePicker/index.js"],"names":["Dropzone","require","Tile","InputImageUrl","createClass","propTypes","error","PropTypes","string","onClickTile","func","onDrop","onDropAccepted","onDropRejected","onUrlSubmit","onUrlInputChange","onClosePreview","images","arrayOf","shape","url","alt","isRequired","disablePreviewImage","bool","initialPreviewImage","disableFileInput","accept","disableClick","inputProps","object","maxSize","number","minSize","multiple","name","fileError","disableUrlInput","urlPlaceholder","urlError","getDefaultProps","map","_","i","Infinity","getInitialState","state","previewImage","selectedTile","isDragging","props","index","e","indexOf","componentDidMount","document","addEventListener","onDragOver","onDragLeave","componentWillUnmount","removeEventListener","setState","event","call","files","image","preview","showPreview","showUrlInput","render","bind","red_50","Boolean","display","position","visibility","opacity","margin"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Icon } from '../Icon';\nimport Colors from '../Colors';\nimport ArrowBox from '../ArrowBox';\nconst Dropzone = require('react-dropzone');\n\nconst Tile = require('./Tile');\nconst InputImageUrl = require('./Url');\n\nexport default React.createClass({\n  propTypes: {\n    error: React.PropTypes.string,\n\n    // Event Handlers\n    onClickTile: React.PropTypes.func, // args: image obj this.props.images, index; when file is clicked\n    onDrop: React.PropTypes.func, // args: File image; when file is chosen or dragged and dropped\n    onDropAccepted: React.PropTypes.func, // args: File image; when file is chosen successfully\n    onDropRejected: React.PropTypes.func, // args: File image; when file is chosen unsuccessfully\n    onUrlSubmit: React.PropTypes.func,  // when hitting enter as url input is focused\n    onUrlInputChange: React.PropTypes.func, // event when url input changes\n    onClosePreview: React.PropTypes.func, // event when preview image is closing\n\n    // tile props\n    images: React.PropTypes.arrayOf(React.PropTypes.shape({\n      url: React.PropTypes.string,\n      alt: React.PropTypes.string,\n    })).isRequired,\n\n    // preview tile props\n    disablePreviewImage: React.PropTypes.bool,\n    initialPreviewImage: React.PropTypes.shape({\n      url: React.PropTypes.string.isRequired,\n      alt: React.PropTypes.string,\n    }), // have component display a preview image by default\n\n    // file input props\n    // detailed documentation on dropzone properties can be found at\n    // https://github.com/okonet/react-dropzone\n    disableFileInput: React.PropTypes.bool, // option to remove File Input / Dropzone component\n    accept: React.PropTypes.string, // accepted filetypes\n    disableClick: React.PropTypes.bool, // option to make dropzone clickable or not\n    // file chooser input properties\n    inputProps: React.PropTypes.object, // eslint-disable-line\n    maxSize: React.PropTypes.number,  // max file size\n    minSize: React.PropTypes.number,  // min file size\n    multiple: React.PropTypes.bool, // option for multiple files\n    name: React.PropTypes.string,\n    fileError: React.PropTypes.string, // error message on file input\n\n    // url input props\n    disableUrlInput: React.PropTypes.bool,  // option to remove url input component\n    urlPlaceholder: React.PropTypes.string, // placeholder text for url input\n    urlError: React.PropTypes.string, // error message on url input\n  },\n\n  getDefaultProps() {\n    return {\n      images: [0, 1, 2, 3].map((_, i) => ({\n        url: 'https://placeholdit.imgix.net/~text?txtsize=33&txt=200%C3%97150&w=200&h=150',\n        alt: `Sample ${i}`,\n      })),\n      disablePreviewImage: false,\n      initialPreviewImage: null,\n\n      disableFileInput: false,\n      accept: 'image/*',\n      disableClick: false,\n      inputProps: {},\n      maxSize: Infinity,\n      minSize: 0,\n      multiple: false,\n      name: 'file-chooser',\n\n      disableUrlInput: false,\n      urlPlaceholder: 'Paste an image URL',\n\n      error: null,\n      fileError: null,\n      urlError: null,\n      onClickTile: () => {},\n      onDrop: () => {},\n      onDropAccepted: () => {},\n      onDropRejected: () => {},\n      onUrlSubmit: () => {},\n      onUrlInputChange: () => {},\n      onClosePreview: () => {},\n    };\n  },\n\n  getInitialState() {\n    const state = {\n      previewImage: null,  // { url: string, alt: string }\n      selectedTile: -1,\n      isDragging: false,\n    };\n\n    // no image selected\n    if (!this.props.initialPreviewImage || this.props.initialPreviewImage === null) {\n      return state;\n    }\n\n    // image tile is already selected\n    const index = this.props.images.map(e => e.url).indexOf(this.props.initialPreviewImage.url);\n    if (index !== -1) {\n      state.selectedTile = index;\n      return state;\n    }\n\n    // url image selected\n    if (this.props.initialPreviewImage.url) {\n      state.previewImage = {\n        url: this.props.initialPreviewImage.url,\n        alt: this.props.initialPreviewImage.alt || 'User supplied url',\n      };\n      return state;\n    }\n\n    return state;\n  },\n\n  componentDidMount() {\n    document.addEventListener('dragover', this.onDragOver, false);\n    document.addEventListener('dragleave', this.onDragLeave, false);\n  },\n\n  componentWillUnmount() {\n    document.removeEventListener('dragover', this.onDragOver);\n    document.removeEventListener('dragover', this.onDragLeave);\n  },\n\n  onDragOver() {\n    this.setState({ isDragging: true });\n  },\n\n  onDragLeave() {\n    this.setState({ isDragging: false });\n  },\n\n  onUrlSubmit(event, url) {\n    this.setState({\n      previewImage: {\n        url,\n        alt: 'User supplied url',\n      },\n      selectedTile: -1,\n    });\n    if (this.props.onUrlSubmit) {\n      this.props.onUrlSubmit.call(this, { url });\n    }\n  },\n\n  onDrop(files) {\n    const image = files[0];\n    if (this.props.onDrop) {\n      this.props.onDrop.call(this, image);\n    }\n  },\n\n  onDropAccepted(files) {\n    const image = files[0];\n    this.setState({\n      previewImage: { url: image.preview, alt: 'preview image' },\n      selectedTile: -1,\n      isDragging: false,\n    });\n    if (this.props.onDropAccepted) {\n      this.props.onDropAccepted.call(this, image);\n    }\n  },\n\n  onDropRejected(files) {\n    const image = files[0];\n    this.setState({\n      previewImage: null,\n      selectedTile: -1,\n      isDragging: false,\n    });\n    if (this.props.onDropRejected) {\n      this.props.onDropRejected.call(this, image);\n    }\n  },\n\n  onClickTile(index) {\n    this.setState({\n      selectedTile: index,\n      previewImage: null,\n    });\n    if (this.props.onClickTile) {\n      this.props.onClickTile.call(this, this.props.images[index], index);\n    }\n  },\n\n  onClosePreview() {\n    this.setState({\n      previewImage: null,\n    });\n    if (this.props.onClosePreview) {\n      this.props.onClosePreview.call(this);\n    }\n  },\n\n  // boolean logic for showing preview image or not\n  showPreview() {\n    return !this.props.disablePreviewImage &&\n      this.state.previewImage &&\n      !(this.props.fileError || this.props.urlError || this.props.error);\n  },\n\n  // boolean logic for showing url input or not\n  showUrlInput() {\n    // if there is no previewImage, or the previewImage is disabled,\n    // and urlInput is not disabled, and there are any error messages,\n    // then show the url input\n    return (((!this.state.previewImage ||\n      (this.state.previewImage && this.disablePreviewImage)) &&\n      !this.props.disableUrlInput) ||\n      this.props.fileError ||\n      this.props.urlError ||\n      this.props.error);\n  },\n\n  render() {\n    return (\n      <div className=\"image-picker--section\">\n        <div>\n          {this.props.images.map((image, index) => (\n            <Tile\n              grayout={(\n                (this.state.previewImage != null) ||\n                (this.state.selectedTile > -1 && index !== this.state.selectedTile)\n              )}\n              image={image.url}\n              alt={image.alt}\n              key={index}\n              // eslint-disable-next-line\n              onClick={this.onClickTile.bind(null, index)}\n              dataId={index}\n            />)\n          )}\n          {!this.props.disableFileInput ? (\n            <div className=\"image-picker--tile\">\n              <ArrowBox\n                className=\"image-picker--arrow-box\"\n                direction=\"top\"\n                icon=\"error\"\n                color={Colors.red_50}\n                width=\"100%\"\n                show={Boolean(this.props.fileError)}\n              >\n                <p className=\"base--p image-picker--error-message\">{this.props.fileError}</p>\n              </ArrowBox>\n              { this.showPreview() ? (\n                <Icon\n                  className=\"image-picker--preview-x\"\n                  type=\"close\"\n                  size=\"small\"\n                  onClick={this.onClosePreview}\n                />\n              ) : null}\n              <label\n                className={classNames(\n                  'image-picker--tile-input-container',\n                  { 'image-picker--tile-input-container_error': this.props.fileError }\n                )}\n                htmlFor=\"image-picker--file-input\"\n              >\n                { this.showPreview() ? (\n                  <div className=\"image-picker--preview-image-container\">\n                    <img\n                      className=\"image-picker--preview-image\"\n                      src={this.state.previewImage.url}\n                      alt={this.state.previewImage.alt}\n                    />\n                  </div>\n                  ) : null}\n                <Dropzone\n                  accept={this.props.accept}\n                  className={classNames(\n                      'content',\n                      'dropzone',\n                      { 'dropzone_on-drag': this.state.isDragging }\n                  )}\n                  disableClick={this.props.disableClick}\n                  inputProps={this.props.inputProps}\n                  maxSize={this.props.maxSize}\n                  minSize={this.props.minSize}\n                  multiple={this.props.multiple}\n                  name={this.props.name}\n                  onDrop={this.onDrop}\n                  onDropAccepted={this.onDropAccepted}\n                  onDropRejected={this.onDropRejected}\n                >\n                  <div className=\"image-picker--tile-input-description\">\n                    Select or drag an image relative to the shopping category\n                  </div>\n                  <div className=\"image-picker--tile-input-icon\">\n                    <Icon type=\"plus\" size=\"regular\" />\n                  </div>\n                </Dropzone>\n              </label>\n\n              {this.showUrlInput() ? (<InputImageUrl\n                onInputChange={this.props.onUrlInputChange}\n                onSubmit={this.onUrlSubmit}\n                placeholder={this.props.urlPlaceholder}\n                error={this.props.urlError}\n              />) : null}\n\n            </div>\n          ) : null}\n        </div>\n        {this.props.error ? (\n          <ArrowBox\n            className=\"image-picker--arrow-box\"\n            direction=\"none\"\n            icon=\"error\"\n            color={Colors.red_50}\n            style={{\n              display: 'block',\n              position: 'relative',\n              visibility: 'visible',\n              opacity: '1',\n              margin: 'auto',\n            }}\n          >\n            <p className=\"base--p image-picker--error-message\">{this.props.error}</p>\n          </ArrowBox>\n        ) : null}\n      </div>\n    );\n  },\n});\n"]}