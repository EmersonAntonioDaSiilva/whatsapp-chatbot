{"version":3,"sources":["ImagePicker/Url.js"],"names":["React","require","classNames","InputImageUrl","createClass","propTypes","onSubmit","PropTypes","func","onInputChange","placeholder","string","error","getDefaultProps","url","getInitialState","handleInputChange","e","setState","target","value","props","call","handleKeyPress","key","state","render","position","red_50","Boolean","module","exports"],"mappings":"aAAA,qC,iDACA,iC,gIACA,GAAMA,OAAQC,QAAQ,OAAR,CAAd,CACA,GAAMC,YAAaD,QAAQ,YAAR,CAAnB,CAEA,GAAME,eAAgBH,MAAMI,WAAN,CAAkB,6BACtCC,UAAW,CACTC,SAAUN,MAAMO,SAAN,CAAgBC,IADjB,CAETC,cAAeT,MAAMO,SAAN,CAAgBC,IAFtB,CAGTE,YAAaV,MAAMO,SAAN,CAAgBI,MAHpB,CAITC,MAAOZ,MAAMO,SAAN,CAAgBI,MAJd,CAD2B,CAOtCE,eAPsC,2BAOpB,CAChB,MAAO,CACLC,IAAK,EADA,CAELJ,YAAa,oBAFR,CAGLJ,SAAU,mBAAM,CAAE,CAHb,CAILG,cAAe,wBAAM,CAAE,CAJlB,CAKLG,MAAO,IALF,CAAP,CAOD,CAfqC,CAgBtCG,eAhBsC,2BAgBpB,CAChB,MAAO,CAAED,IAAK,EAAP,CAAP,CACD,CAlBqC,CAmBtC;;KAGAE,iBAtBsC,4BAsBpBC,CAtBoB,CAsBjB,CACnB,KAAKC,QAAL,CAAc,CAAEJ,IAAKG,EAAEE,MAAF,CAASC,KAAhB,CAAd,EACA,GAAI,KAAKC,KAAL,CAAWZ,aAAf,CAA8B,CAC5B,KAAKY,KAAL,CAAWZ,aAAX,CAAyBa,IAAzB,CAA8B,IAA9B,CAAoCL,CAApC,EACD,CACF,CA3BqC,CA4BtC;;KAGAM,cA/BsC,yBA+BvBN,CA/BuB,CA+BpB,CAChB,GAAIA,EAAEO,GAAF,GAAU,OAAV,EAAqB,KAAKC,KAAL,CAAWX,GAAX,GAAmB,EAA5C,CAAgD,CAC9C,GAAI,KAAKO,KAAL,CAAWf,QAAf,CAAyB,CACvB,KAAKe,KAAL,CAAWf,QAAX,CAAoBgB,IAApB,CAAyB,IAAzB,CAA+BL,CAA/B,CAAkC,KAAKQ,KAAL,CAAWX,GAA7C,EACD,CACF,CACF,CArCqC,CAsCtCY,MAtCsC,kBAsC7B,CACP,MACE,4BAAK,MAAO,CAAEC,SAAU,UAAZ,CAAZ,EACE,6BACE,UAAWzB,WACT,yBADS,CAET,aAFS,CAGT,CAAE,gCAAiC,KAAKmB,KAAL,CAAWT,KAA9C,CAHS,CADb,CAME,SAAU,KAAKI,iBANjB,CAOE,WAAY,KAAKO,cAPnB,CAQE,YAAa,KAAKF,KAAL,CAAWX,WAR1B,CASE,KAAK,MATP,CAUE,MAAO,KAAKe,KAAL,CAAWX,GAVpB,EADF,CAaE,wCACE,UAAU,yBADZ,CAEE,UAAU,QAFZ,CAGE,KAAK,OAHP,CAIE,MAAO,iBAAOc,MAJhB,CAKE,MAAM,MALR,CAME,KAAMC,QAAQ,KAAKR,KAAL,CAAWT,KAAnB,CANR,EAQE,yBAAG,UAAU,qCAAb,EAAoD,KAAKS,KAAL,CAAWT,KAA/D,CARF,CAbF,CADF,CA0BD,CAjEqC,CAAlB,CAAtB,CAoEAkB,OAAOC,OAAP,CAAiB5B,aAAjB","file":"Url.js","sourcesContent":["import ArrowBox from '../ArrowBox';\nimport Colors from '../Colors';\nconst React = require('react');\nconst classNames = require('classnames');\n\nconst InputImageUrl = React.createClass({\n  propTypes: {\n    onSubmit: React.PropTypes.func,\n    onInputChange: React.PropTypes.func,\n    placeholder: React.PropTypes.string,\n    error: React.PropTypes.string,\n  },\n  getDefaultProps() {\n    return {\n      url: '',\n      placeholder: 'Sample Placeholder',\n      onSubmit: () => {},\n      onInputChange: () => {},\n      error: null,\n    };\n  },\n  getInitialState() {\n    return { url: '' };\n  },\n  /**\n   * During changes to the url input\n   */\n  handleInputChange(e) {\n    this.setState({ url: e.target.value });\n    if (this.props.onInputChange) {\n      this.props.onInputChange.call(this, e);\n    }\n  },\n  /**\n   * On Input url key press\n   */\n  handleKeyPress(e) {\n    if (e.key === 'Enter' && this.state.url !== '') {\n      if (this.props.onSubmit) {\n        this.props.onSubmit.call(this, e, this.state.url);\n      }\n    }\n  },\n  render() {\n    return (\n      <div style={{ position: 'relative' }}>\n        <input\n          className={classNames(\n            'image-picker--url-input',\n            'base--input',\n            { 'image-picker--url-input_error': this.props.error }\n          )}\n          onChange={this.handleInputChange}\n          onKeyPress={this.handleKeyPress}\n          placeholder={this.props.placeholder}\n          type=\"text\"\n          value={this.state.url}\n        />\n        <ArrowBox\n          className=\"image-picker--arrow-box\"\n          direction=\"bottom\"\n          icon=\"error\"\n          color={Colors.red_50}\n          width=\"100%\"\n          show={Boolean(this.props.error)}\n        >\n          <p className=\"base--p image-picker--error-message\">{this.props.error}</p>\n        </ArrowBox>\n      </div>\n    );\n  },\n});\n\nmodule.exports = InputImageUrl;\n"]}