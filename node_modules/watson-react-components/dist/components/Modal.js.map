{"version":3,"sources":["Modal.js"],"names":["createClass","propTypes","isOpen","PropTypes","bool","style","object","onExit","func","onEnter","getDefaultProps","getInitialState","initialHide","componentWillReceiveProps","nextProps","props","call","setTimeout","setState","render","hide","state","show","children","gray_50"],"mappings":"sEACA,4B,2CACA,sC,qDACA,4BACA,gC,gIAEA;AANA,wB,gBAQe,gBAAMA,WAAN,CAAkB,qBAC/BC,UAAW,CACTC,OAAQ,gBAAMC,SAAN,CAAgBC,IADf,CAET;AACAC,MAAO,gBAAMF,SAAN,CAAgBG,MAHd,CAGuB;AAChCC,OAAQ,gBAAMJ,SAAN,CAAgBK,IAJf,CAKT;AACAC,QAAS,gBAAMN,SAAN,CAAgBK,IANhB,CADoB,CAU/BE,eAV+B,2BAUb,CAChB,MAAO,CACLR,OAAQ,KADH,CAELK,OAAQ,iBAAM,CAAE,CAFX,CAGLE,QAAS,kBAAM,CAAE,CAHZ,CAAP,CAKD,CAhB8B,CAkB/BE,eAlB+B,2BAkBb,CAChB,MAAO,CACLC,YAAa,IADR,CAAP,CAGD,CAtB8B,CAwB/BC,yBAxB+B,oCAwBLC,SAxBK,CAwBM,CACnC,GAAIA,UAAUZ,MAAV,EAAoB,CAAC,KAAKa,KAAL,CAAWb,MAApC,CAA4C,CAC1CY,UAAUL,OAAV,CAAkBO,IAAlB,CAAuB,IAAvB,EACD,CACF,CA5B8B,CA8B/BJ,WA9B+B,uBA8BjB,gBACZK,WAAW,UAAM,CACf,MAAKC,QAAL,CAAc,CACZN,YAAa,KADD,CAAd,EAGD,CAJD,CAIG,IAJH,EAKD,CApC8B,CAsC/BO,MAtC+B,kBAsCtB,CACP,KAAKP,WAAL,GACA,MACE,sCACE,UAAW,yBACT,SADS,CAET,CAAEQ,KAAM,KAAKC,KAAL,CAAWT,WAAnB,CAFS,CAGT,CAAEU,KAAM,KAAKP,KAAL,CAAWb,MAAnB,CAHS,CADb,EAOE,qCAAK,UAAU,OAAf,CAAuB,MAAO,KAAKa,KAAL,CAAWV,KAAX,EAAoB,IAAlD,EACI;AACA,KAAKU,KAAL,CAAWQ,QAFf,CAGE,wCAAQ,UAAU,UAAlB,CAA6B,QAAS,KAAKR,KAAL,CAAWR,MAAjD,EACE,0CAAM,KAAK,OAAX,CAAmB,KAAM,iBAAOiB,OAAhC,EADF,CAHF,CAPF,CADF,CAiBD,CAzD8B,CAAlB,C","file":"Modal.js","sourcesContent":["/* eslint max-len:off */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Icon } from './Icon';\nimport Colors from './Colors';\n\n// error, alert, warning,\n\nexport default React.createClass({\n  propTypes: {\n    isOpen: React.PropTypes.bool,\n    // style is inline css style objects\n    style: React.PropTypes.object,  // eslint-disable-line\n    onExit: React.PropTypes.func,\n    // onEnter is used in componentWillReceiveProps\n    onEnter: React.PropTypes.func,  // eslint-disable-line\n  },\n\n  getDefaultProps() {\n    return {\n      isOpen: false,\n      onExit: () => {},\n      onEnter: () => {},\n    };\n  },\n\n  getInitialState() {\n    return {\n      initialHide: true,\n    };\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.isOpen && !this.props.isOpen) {\n      nextProps.onEnter.call(this);\n    }\n  },\n\n  initialHide() {\n    setTimeout(() => {\n      this.setState({\n        initialHide: false,\n      });\n    }, 2000);\n  },\n\n  render() {\n    this.initialHide();\n    return (\n      <div\n        className={classNames(\n          'overlay',\n          { hide: this.state.initialHide },\n          { show: this.props.isOpen }\n        )}\n      >\n        <div className=\"modal\" style={this.props.style || null}>\n          { // eslint-disable-next-line react/prop-types\n            this.props.children }\n          <button className=\"modal--x\" onClick={this.props.onExit}>\n            <Icon type=\"close\" fill={Colors.gray_50} />\n          </button>\n        </div>\n      </div>\n    );\n  },\n});\n"]}